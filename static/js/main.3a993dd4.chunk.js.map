{"version":3,"sources":["components/layout/Header.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["headerstyle","backgroundColor","color","fontSize","margin","textAlign","Linkstyle","Header","react_default","a","createElement","style","react_router_dom","to","TodoItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","background","padding","borderBottom","textDecoration","props","todo","completed","inherits","createClass","key","value","_this$props$todo","id","title","type","onChange","markComplete","bind","onClick","delTodo","btnStyle","Component","border","borderRadius","cursor","float","Todos","todos","map","components_TodoItem","AddTodo","state","onSubmit","e","preventDefault","addTodo","setState","defineProperty","target","name","display","flex","placeholder","className","About","Fragment","App","title:","axios","delete","then","res","toConsumableArray","filter","post","data","_this2","get","_this3","layout_Header","react_router","exact","path","render","components_AddTodo","components_Todos","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a993dd4.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nfunction Header() {\n    return(\n        <header style ={headerstyle}>\n            <h1>Gym Exercises todos</h1>\n            <Link style={Linkstyle} to =\"/\">Home</Link> | <Link style={Linkstyle} to=\"/about\">About</Link>\n        </header>\n    )\n}\n\nconst headerstyle ={\n    backgroundColor:'grey',\n    color:'orange',\n    fontSize:'1.6em',\n    margin:'0px 0px',   \n    textAlign:'center'\n\n    \n}\n\n\nconst Linkstyle ={\n    color:'white',\n}\n\n\nexport default Header","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class TodoItem extends Component {\n  getStyle = () => {\n    return {\n      background: 'silver',\n      padding: '10px',\n      borderBottom: '1px #ccc dotted',\n      textDecoration: this.props.todo.completed ? 'line-through' : 'none'\n    }\n  }\n\n  render() {\n    const { id, title } = this.props.todo;\n    return (\n      <div style={this.getStyle()}>\n        <p>\n          <input type=\"checkbox\" onChange={this.props.markComplete.bind(this, id)} /> {' '}\n          { title }\n          <button onClick={this.props.delTodo.bind(this, id)} style={btnStyle}>x</button>\n        </p>\n      </div>\n    )\n  }\n}\n\n// PropTypes\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired,\n}\n\nconst btnStyle = {\n  background: 'grey',\n  color: 'red',\n  border: 'none',\n  padding: '5px 9px',\n  borderRadius: '50%',\n  cursor: 'pointer',\n  float: 'right'\n}\n\nexport default TodoItem\n","import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nclass Todos extends Component {\n  render() {\n    return this.props.todos.map((todo) => (\n      <TodoItem key={todo.id} todo={todo} markComplete={this.props.markComplete} delTodo={this.props.delTodo} />\n    ));\n  }\n}\n\n// PropTypes\nTodos.propTypes = {\n  todos: PropTypes.array.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired,\n}\n\nexport default Todos;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class AddTodo extends Component {\n  state = {\n    title: ''\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.addTodo(this.state.title);\n    this.setState({ title: '' });\n  }\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit} style={{ display: 'flex' }}>\n        <input \n          type=\"text\" \n          name=\"title\" \n          style={{ flex: '10', padding: '5px' }}\n          placeholder=\"Add Workouts ...\" \n          value={this.state.title}\n          onChange={this.onChange}\n        />\n        <input \n          type=\"submit\" \n          value=\"Submit\" \n          className=\"btn\"\n          style={{flex: '1'}}\n        />\n      </form>\n    )\n  }\n}\n\n// PropTypes\nAddTodo.propTypes = {\n  addTodo: PropTypes.func.isRequired\n}\n\nexport default AddTodo\n","import React from 'react'\n\nfunction About () {\n    return (\n     <React.Fragment>\n       <h1>About</h1>\n       <p>This is the gym workout App v1.0.0. it is a React App </p>\n\n\n     </React.Fragment>\n    )\n  }\n\n\nexport default About\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\n// import uuid from 'uuid';\nimport axios from 'axios';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    todos: [\n      {\n      \"id\":1,\n      \"title\":\"deadlift\",\n      \"completed\":\"false\"\n  },\n  {\n      \"id\":2,\n      \"title\":\"squats\",\n      \"completed\":\"false\"\n  },\n  {\n      \"id\":3,\n      \"title\":\"bench press\",\n      \"completed\":\"false\"\n  },\n  {\n      \"id\":4,\n      \"title:\":\"grunting\",\n      \"completed\":\"false\"\n  }]\n  }\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=6')\n      .then(res => this.setState({ todos: res.data }))\n  }\n\n  // Toggle Complete\n  markComplete = (id) => {\n    this.setState({ todos: this.state.todos.map(todo => {\n      if(todo.id === id) {\n        todo.completed = !todo.completed\n      }\n      return todo;\n    }) });\n  }\n\n  // Delete Todo\n  delTodo = (id) => {\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n      .then(res => this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)] }));\n  }\n\n  // Add Todo\n  addTodo = (title) => {\n    axios.post('https://jsonplaceholder.typicode.com/todos', {\n      title,\n      completed: false\n    })\n      .then(res => this.setState({ todos: [...this.state.todos, res.data] }));\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route exact path=\"/\" render={props => (\n              <React.Fragment>\n                <AddTodo addTodo={this.addTodo} />\n                <Todos todos={this.state.todos} markComplete={this.markComplete} delTodo={this.delTodo} />\n              </React.Fragment>\n            )} />\n            <Route path=\"/about\" component={About} />\n          </div>  \n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}